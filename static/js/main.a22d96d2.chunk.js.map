{"version":3,"sources":["components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.jsx"],"names":["Controls","amount","onChange","deposit","withdraw","className","type","name","id","onClick","Balance","balance","TransactionHistory","arrayOfTransactions","map","item","date","key","Dashboard","state","transactions","transactionAmounts","income","expenses","generateIds","amountInput","shortid","generate","handleInputAmount","e","Number","currentTarget","value","handleDeposit","console","log","transaction","Date","toLocaleString","setState","handleWithdraw","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a22d96d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Controls = ({ amount, onChange, deposit, withdraw }) => (\r\n  <section className=\"controls\">\r\n    <input type=\"number\" name=\"amount\" id={amount} onChange={onChange} />\r\n    <button type=\"button\" onClick={deposit}>\r\n      Deposit\r\n    </button>\r\n    <button type=\"button\" onClick={withdraw}>\r\n      Withdraw\r\n    </button>\r\n  </section>\r\n);\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Balance = ({ withdraw, deposit, balance }) => (\r\n  <section className=\"balance\">\r\n    <span>⬆️{withdraw}$</span>\r\n    <span>⬇️{deposit}$</span>\r\n    <span>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\n\r\nconst TransactionHistory = ({ arrayOfTransactions }) => (\r\n  <table className=\"history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {arrayOfTransactions.map(item => {\r\n        const { id, type, amount, date } = item;\r\n        return (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}$</td>\r\n            <td>{date}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0,\r\n  };\r\n  transactionAmounts = {\r\n    amount: 0,\r\n    income: 0,\r\n    expenses: 0,\r\n  };\r\n  generateIds = {\r\n    amountInput: shortid.generate(),\r\n  };\r\n\r\n  handleInputAmount = e => {\r\n    this.transactionAmounts.amount = Number(e.currentTarget.value);\r\n  };\r\n  handleDeposit = () => {\r\n    if (this.transactionAmounts.amount <= 0) {\r\n      console.log('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n    this.transactionAmounts.income = this.transactionAmounts.amount;\r\n    const transaction = {\r\n      id: shortid.generate(),\r\n      type: 'deposit',\r\n      amount: this.transactionAmounts.income,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n    this.setState(state => ({\r\n      balance: state.balance + this.transactionAmounts.amount,\r\n      transactions: [...state.transactions, transaction],\r\n    }));\r\n  };\r\n  handleWithdraw = () => {\r\n    if (this.transactionAmounts.amount > this.state.balance) {\r\n      console.log('На счету недостаточно средств для проведения операции!');\r\n      return;\r\n    } else if (this.transactionAmounts.amount <= 0) {\r\n      console.log('Введите сумму для проведения операции!');\r\n    } else {\r\n      this.transactionAmounts.expenses = this.transactionAmounts.amount;\r\n      const transaction = {\r\n        id: shortid.generate(),\r\n        type: 'withdraw',\r\n        amount: this.transactionAmounts.expenses,\r\n        date: new Date().toLocaleString(),\r\n      };\r\n      this.setState(state => ({\r\n        balance: state.balance - this.transactionAmounts.amount,\r\n        transactions: [...state.transactions, transaction],\r\n      }));\r\n    }\r\n  };\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    const { income, expenses } = this.transactionAmounts;\r\n    const { amountInput } = this.generateIds;\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <Controls\r\n          amount={amountInput}\r\n          onChange={this.handleInputAmount}\r\n          deposit={this.handleDeposit}\r\n          withdraw={this.handleWithdraw}\r\n        />\r\n\r\n        <Balance withdraw={expenses} deposit={income} balance={balance} />\r\n\r\n        <TransactionHistory arrayOfTransactions={transactions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Dashboard />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}