{"version":3,"sources":["components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.jsx"],"names":["Controls","state","amount","handleInputAmount","e","setState","Number","currentTarget","value","setDeposit","props","deposit","setWithdraw","withdraw","className","type","name","id","this","amountId","onChange","onClick","Component","Balance","balance","TransactionHistory","arrayOfTransactions","map","item","date","key","Dashboard","transactions","generateIds","amountInput","shortid","generate","handleDeposit","income","Date","toLocaleString","toast","error","handleWithdraw","transactionAmounts","reduce","acc","t","expenses","App","ReactDOM","render","document","getElementById"],"mappings":"+TAwCeA,E,2MArCbC,MAAQ,CACNC,OAAQ,G,EAGVC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACZH,OAAQI,OAAOF,EAAEG,cAAcC,U,EAInCC,WAAa,WACX,EAAKC,MAAMC,QAAQ,EAAKV,MAAMC,S,EAEhCU,YAAc,WACZ,EAAKF,MAAMG,SAAS,EAAKZ,MAAMC,S,wEAI/B,OACE,6BAASY,UAAU,YACjB,2BACEC,KAAK,SACLC,KAAK,SACLC,GAAIC,KAAKR,MAAMS,SACfC,SAAUF,KAAKf,oBAEjB,4BAAQY,KAAK,SAASM,QAASH,KAAKT,YAApC,WAGA,4BAAQM,KAAK,SAASM,QAASH,KAAKN,aAApC,iB,GA9BeU,aCQRC,EARC,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAUF,EAAb,EAAaA,QAASa,EAAtB,EAAsBA,QAAtB,OACd,6BAASV,UAAU,WACjB,6CAASD,EAAT,KACA,6CAASF,EAAT,KACA,0CAAgBa,EAAhB,OCoBWC,EAxBY,SAAC,GAAD,IAAGC,EAAH,EAAGA,oBAAH,OACzB,2BAAOZ,UAAU,WACf,+BACE,4BACE,2CACA,sCACA,sCAGJ,+BACGY,EAAoBC,KAAI,SAAAC,GAAS,IACxBX,EAA2BW,EAA3BX,GAAIF,EAAuBa,EAAvBb,KAAMb,EAAiB0B,EAAjB1B,OAAQ2B,EAASD,EAATC,KAC1B,OACE,wBAAIC,IAAKb,GACP,4BAAKF,GACL,4BAAKb,EAAL,KACA,4BAAK2B,U,+OCsEFE,E,2MA/Eb9B,MAAQ,CACN+B,aAAc,GACdR,QAAS,G,EAGXS,YAAc,CACZC,YAAaC,IAAQC,Y,EAGvBC,cAAgB,SAAAnC,GACd,GAAKA,EAAL,CAIA,IAAMoC,EAAS,CACbrB,GAAIkB,IAAQC,WACZrB,KAAM,SACNb,OAAQA,EACR2B,MAAM,IAAIU,MAAOC,kBAEnB,EAAKnC,UAAS,SAAAJ,GAAK,MAAK,CACtBuB,QAASvB,EAAMuB,QAAUtB,EACzB8B,aAAa,GAAD,mBAAM/B,EAAM+B,cAAZ,CAA0BM,aAXtCG,IAAMC,MAAM,gN,EAehBC,eAAiB,SAAAzC,GACf,GAAIA,EAAS,EAAKD,MAAMuB,QACtBiB,IAAMC,MAAM,0SAEP,GAAIxC,GAAU,EACnBuC,IAAMC,MAAM,mNACP,CACL,IAAM7B,EAAW,CACfI,GAAIkB,IAAQC,WACZrB,KAAM,WACNb,OAAQA,EACR2B,MAAM,IAAIU,MAAOC,kBAEnB,EAAKnC,UAAS,SAAAJ,GAAK,MAAK,CACtBuB,QAASvB,EAAMuB,QAAUtB,EACzB8B,aAAa,GAAD,mBAAM/B,EAAM+B,cAAZ,CAA0BnB,U,wEAKlC,IAAD,EAC2BK,KAAKjB,MAA/B+B,EADD,EACCA,aAAcR,EADf,EACeA,QACdU,EAAgBhB,KAAKe,YAArBC,YACFU,EAAqBZ,EAAaa,QACtC,SAACC,EAAKC,GACJ,O,yVAAO,CAAP,GACKD,EADL,eAEGC,EAAEhC,KAAOgC,EAAE7C,OAAS4C,EAAIC,EAAEhC,UAG/B,CAAEuB,OAAQ,EAAGU,SAAU,IAEzB,OACE,yBAAKlC,UAAU,aACb,kBAAC,EAAD,CACEK,SAAUe,EACVvB,QAASO,KAAKmB,cACdxB,SAAUK,KAAKyB,iBAGjB,kBAAC,EAAD,CACE9B,SAAU+B,EAAmBI,SAC7BrC,QAASiC,EAAmBN,OAC5Bd,QAASA,IAGX,kBAAC,EAAD,CAAoBE,oBAAqBM,IACzC,kBAAC,IAAD,W,GA1EgBV,aCCT2B,EANH,kBACV,6BACE,kBAAC,EAAD,Q,MCAJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8a440d23.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Controls extends Component {\r\n  state = {\r\n    amount: 0,\r\n  };\r\n\r\n  handleInputAmount = e => {\r\n    this.setState({\r\n      amount: Number(e.currentTarget.value),\r\n    });\r\n  };\r\n\r\n  setDeposit = () => {\r\n    this.props.deposit(this.state.amount);\r\n  };\r\n  setWithdraw = () => {\r\n    this.props.withdraw(this.state.amount);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"controls\">\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          id={this.props.amountId}\r\n          onChange={this.handleInputAmount}\r\n        />\r\n        <button type=\"button\" onClick={this.setDeposit}>\r\n          Deposit\r\n        </button>\r\n        <button type=\"button\" onClick={this.setWithdraw}>\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Balance = ({ withdraw, deposit, balance }) => (\r\n  <section className=\"balance\">\r\n    <span>⬆️{withdraw}$</span>\r\n    <span>⬇️{deposit}$</span>\r\n    <span>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\n\r\nconst TransactionHistory = ({ arrayOfTransactions }) => (\r\n  <table className=\"history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {arrayOfTransactions.map(item => {\r\n        const { id, type, amount, date } = item;\r\n        return (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}$</td>\r\n            <td>{date}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0,\r\n  };\r\n\r\n  generateIds = {\r\n    amountInput: shortid.generate(),\r\n  };\r\n\r\n  handleDeposit = amount => {\r\n    if (!amount) {\r\n      toast.error('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n    const income = {\r\n      id: shortid.generate(),\r\n      type: 'income',\r\n      amount: amount,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n    this.setState(state => ({\r\n      balance: state.balance + amount,\r\n      transactions: [...state.transactions, income],\r\n    }));\r\n  };\r\n\r\n  handleWithdraw = amount => {\r\n    if (amount > this.state.balance) {\r\n      toast.error('На счету недостаточно средств для проведения операции!');\r\n      return;\r\n    } else if (amount <= 0) {\r\n      toast.error('Введите сумму для проведения операции!');\r\n    } else {\r\n      const withdraw = {\r\n        id: shortid.generate(),\r\n        type: 'expenses',\r\n        amount: amount,\r\n        date: new Date().toLocaleString(),\r\n      };\r\n      this.setState(state => ({\r\n        balance: state.balance - amount,\r\n        transactions: [...state.transactions, withdraw],\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    const { amountInput } = this.generateIds;\r\n    const transactionAmounts = transactions.reduce(\r\n      (acc, t) => {\r\n        return {\r\n          ...acc,\r\n          [t.type]: t.amount + acc[t.type],\r\n        };\r\n      },\r\n      { income: 0, expenses: 0 },\r\n    );\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <Controls\r\n          amountId={amountInput}\r\n          deposit={this.handleDeposit}\r\n          withdraw={this.handleWithdraw}\r\n        />\r\n\r\n        <Balance\r\n          withdraw={transactionAmounts.expenses}\r\n          deposit={transactionAmounts.income}\r\n          balance={balance}\r\n        />\r\n\r\n        <TransactionHistory arrayOfTransactions={transactions} />\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Dashboard />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}